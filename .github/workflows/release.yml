name: Build and Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      tag:
        description: 'Tag to release'
        required: true
        default: 'v0.18.6'

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Fetch IPInfo GeoIP Database
        env: 
          IPINFO_TOKEN: ${{ secrets.IPINFO_TOKEN }}
        run: |
          rm pkg/geoip/geoip.db
          wget -O pkg/geoip/geoip.db https://ipinfo.io/data/free/country.mmdb?token=${IPINFO_TOKEN}

      - name: Extract branch name
        id: extract_branch
        run: |
          if [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
            echo "tag=${{ github.event.inputs.tag }}" >> $GITHUB_ENV
          else
            export TAG_NAME=$(echo ${GITHUB_REF#refs/tags/})
            echo "tag=$TAG_NAME" >> $GITHUB_ENV
          fi

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.21.11

    - name: Build for FreeBSD using Docker
      run: |
        docker run --rm \
          -v ${{ github.workspace }}:/go/src/app \
          -w /go/src/app \
          freebsd:latest \
          sh -c "export CGO_ENABLED=1 && export GOOS=freebsd && export GOARCH=amd64 && go build -ldflags='-s -w --extldflags \"-static -fpic\" -X github.com/naiba/nezha/service/singleton.Version=${{ env.tag }}' -o /go/src/app/dist/nezha-dashboard-freebsd-amd64 cmd/dashboard/main.go"

      - name: xgo build
        uses: crazy-max/ghaction-xgo@v3
        with:
          xgo_version: latest
          go_version: 1.21.x
          dest: dist
          pkg: cmd/dashboard
          prefix: nezha-dashboard
          targets: linux/amd64,linux/arm64,linux/arm-7,linux/s390x,linux/riscv64,windows/amd64,windows/386,windows/arm64
          v: true
          x: false
          race: false
          tags: timetzdata
          ldflags: -s -w --extldflags '-static -fpic' -X github.com/naiba/nezha/service/singleton.Version=${{ env.tag }}
          buildmode: default

      - name: fix dist
        run: |
          ls -al dist/
          mv dist/nezha-dashboard-linux-arm-7 dist/nezha-dashboard-linux-arm

      - name: Delete resource.go
        run: |
          rm resource/resource.go

      - name: Prepare config.yaml
        run: |
          mkdir -p data
          cp script/config.yaml data/config.yaml

      - name: Compress dist files
        run: |
          cd dist
          for file in *; do
            if [ -f "$file" ]; then
              base_name=$(basename "$file")
              dir_name="${base_name}_dir"
              rm -rf "$dir_name" # 删除可能存在的旧目录
              mkdir "$dir_name"
              mv "$file" "$dir_name/nezha-dashboard"
              cp -r ../resource "$dir_name/"
              cp -r ../data "$dir_name/"
              (cd "$dir_name" && zip -r "../${base_name}.zip" .)
              (cd "$dir_name" && tar -czvf "../${base_name}.tar.gz" .)
              rm -r "$dir_name"
            fi
          done

      - name: Release
        uses: ncipollo/release-action@v1
        with:
          artifacts: "dist/*.zip, dist/*.tar.gz"
          generateReleaseNotes: true
          makeLatest: legacy
          omitBody: false
          omitBodyDuringUpdate: false
          omitDraftDuringUpdate: false
          omitName: false
          omitNameDuringUpdate: false
          omitPrereleaseDuringUpdate: false
          removeArtifacts: false
          replacesArtifacts: true
          skipIfReleaseExists: false
          updateOnlyUnreleased: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
